/**
 * Modules in this bundle
 * 
 * kindlized:
 *   license: ISC
 *   author: https://twitter.com/iamchawan
 * 
 */
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var account, analytics, app, author, intro;

app = require('./lib/app');

account = require('./lib/account');

analytics = require('./lib/analytics');

intro = require('./lib/intro');

author = require('./lib/author');

angular.module('App', []).config([
  "$locationProvider", function($locationProvider) {
    return $locationProvider.html5Mode({
      enabled: true,
      requireBase: false
    });
  }
]).controller('postNewBook', ['$scope', '$filter', '$http', app]).controller('account', ['$scope', '$http', '$window', '$location', account]).controller('intro', ['$scope', '$http', '$window', intro]).controller('author', ['$scope', '$http', '$http', author]);



},{"./lib/account":2,"./lib/analytics":3,"./lib/app":4,"./lib/author":5,"./lib/intro":7}],2:[function(require,module,exports){
module.exports = function($scope, $http, $window, $location) {
  $scope.isSending = false;
  $scope.statusMessage = '送信中...';
  if (($location.search()['ASIN'])) {
    $scope.isRegist = true;
  } else {
    $scope.isRegist = false;
  }
  $scope.toggleBtn = function() {
    return $scope.isRegist = !$scope.isRegist;
  };
  $scope.regist = function(mail, password) {
    var httpOpt;
    $scope.isSending = true;
    httpOpt = {
      method: 'post',
      url: '/account/regist',
      data: {
        mail: mail,
        password: password
      }
    };
    $http(httpOpt).success(function(statusMessage) {
      $scope.statusMessage = statusMessage;
    }).then(function() {
      console.log('/account/regist 完了');
    });
  };
  $scope.login = function(mail, password) {
    var httpOpt;
    $scope.isSending = true;
    httpOpt = {
      method: 'post',
      url: '/account/login',
      data: {
        mail: mail,
        password: password
      }
    };
    $http(httpOpt).success(function(statusMessage) {
      $window.location.href = '/';
    }).then(function(statusMessage) {
      $scope.statusMessage = 'ログイン完了';
      console.log('/account/login 完了');
    });
  };
  $scope.logout = function() {
    var httpOpt;
    $scope.isSending = true;
    httpOpt = {
      method: 'post',
      url: '/account/logout'
    };
    $http(httpOpt).success(function(statusMessage) {
      $scope.statusMessage = statusMessage;
      $window.location.href = '/account';
    }).then(function() {
      console.log('/account/logout 完了');
    });
  };
};



},{}],3:[function(require,module,exports){
module.exports = function() {
  (function(i, s, o, g, r, a, m) {
    i['GoogleAnalyticsObject'] = r;
    i[r] = i[r] || function() {
      (i[r].q = i[r].q || []).push(arguments);
    };
    i[r].l = 1 * new Date;
    a = s.createElement(o);
    m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m);
  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
  ga('create', 'UA-33205064-9', 'auto');
  return ga('send', 'pageview');
};



},{}],4:[function(require,module,exports){
var imageStrModifyer;

imageStrModifyer = require('./imageStrModifyer');

module.exports = function($scope, $filter, $http) {
  var httpOpt;
  httpOpt = {
    method: 'get',
    url: '/book/user'
  };
  $http(httpOpt).success(function(data) {
    var bookListInUser, user;
    bookListInUser = imageStrModifyer(data.newBooks);
    user = data.user;
    $scope.bookListInUser = bookListInUser;
    $scope.userName = user.mail;
  }).then(function() {});
  $scope.search = function(newBook) {
    var httpOptToAmazon, httpOptToDB;
    $scope.isWaiting = true;
    $scope.bookListInDB = null;
    httpOptToDB = {
      method: 'post',
      url: '/search/db',
      data: {
        newBook: $scope.newBook
      }
    };
    httpOptToAmazon = {
      method: 'post',
      url: '/search/amazon',
      data: {
        newBook: $scope.newBook
      }
    };
    $http(httpOptToDB).success(function(data, status) {
      if (data.bookListInDB.length > 0) {
        $scope.isWaiting = false;
        $scope.showSuggestedBooks = true;
      }
      $scope.bookListInDB = imageStrModifyer(data.bookListInDB);
    }).then(function() {
      $http(httpOptToAmazon).success(function(data, status) {
        if (data.bookListInAmazon.length > 0) {
          console.log(data.bookListInAmazon);
          $scope.bookListInDB = $scope.bookListInDB.concat(imageStrModifyer(data.bookListInAmazon));
          $scope.showSuggestedBooks = true;
          console.log($scope.bookListInDB);
        }
      }).then(function() {
        $scope.isWaiting = false;
        $scope.newBook = '';
      });
    });
  };
  $scope.registBook = function(newBook, $index) {
    $scope.bookListInDB[$index].isRegisterd = true;
    $scope.bookListInUser.push($scope.bookListInDB[$index]);
    httpOpt = {
      method: 'post',
      url: '/save',
      data: {
        newBook: newBook
      }
    };
    $http(httpOpt).success(function(data, status) {}).then(function() {});
  };
  $scope.unRegistBook = function($index) {
    var _id;
    _id = $scope.bookListInUser[$index]._id;
    $scope.bookListInUser.splice($index, 1);
    httpOpt = {
      method: 'post',
      url: '/reduce',
      data: {
        deleteBookId: _id
      }
    };
    $http(httpOpt).success(function() {}).then(function() {});
  };
};



},{"./imageStrModifyer":6}],5:[function(require,module,exports){
module.exports = function($scope, $filter, $http) {
  return $scope.registBook = function(ASIN) {
    var httpOpt;
    httpOpt = {
      method: 'post',
      url: '/save',
      data: {
        ASIN: ASIN,
        isAuthorPage: true
      }
    };
    console.log("httpOpt", httpOpt);
    $http(httpOpt).success(function(data, status) {}).then(function() {});
  };
};



},{}],6:[function(require,module,exports){
module.exports = function(bookList) {
  return bookList.map(function(book) {
    var err, images;
    try {
      images = JSON.parse(book.images);
      images = images[0].ImageSet[0].MediumImage[0].URL[0];
    } catch (_error) {
      err = _error;
      images = '';
    } finally {
      book.images = images;
    }
    return book;
  });
};



},{}],7:[function(require,module,exports){
module.exports = function($scope, $http, $window) {
  var httpOpt;
  $scope.books = [];
  httpOpt = {
    method: 'get',
    url: '/book/intro'
  };
  $http(httpOpt).success(function(books) {
    $scope.books = books;
  });
};



},{}]},{},[1]);
